/*
 * Copyright (C) 2006 to the Present, Medium, Inc. - ALL RIGHTS RESERVED
 * 
 * This source code contains proprietary information of Medium, Inc.
 * and its receipt or possession does not convey any rights to reproduce or
 * disclose its contents, or to manufacture, use or sell anything it may
 * describe. Reproduction, disclosure or use without specific written
 * authorization from Medium, Inc. is strictly prohibited.
 * 
 * Medium, Inc. may have patents, patent applications, trademarks, copyrights,
 * or other intellectual property rights covering this source code. The receipt
 * or possession of this source code does not give you any license to these
 * patents, trademarks, copyrights, or other intellectual property.
 *
 * $Id$
 */
#include "nsISupports.idl"

interface IMediumSensorListener;
interface IMediumServiceContext;
interface IMediumWindow;
interface nsIDOMWindow;

[
    scriptable,
    uuid(0c6b7fb3-62a3-4952-a36b-8a78da92d872)
]
interface IMediumAddOnSingleton :
    nsISupports
{
    readonly attribute AString version;

    readonly attribute AString lastRunVersion;
    void setLastRunVersion();

    IMediumWindow registerWindow( in nsIDOMWindow window);

    void storeReasonForNavigation( in AUTF8String url, in AString initiatingContextId, in AString reason);
};

[
    scriptable,
    uuid(9cfbe469-0f75-4edf-b58b-5f29511ded67)
]
interface IMediumWindow :
    nsISupports
{
    readonly attribute IMediumServiceContext serviceContext;

    const short SENSOR_OFF = 0;
    const short SENSOR_ON = 1;
    const short SENSOR_SUSPENDED = 2;
    readonly attribute short sensorState;
    void enableSensor();
    void disableSensor();
    void toggleSensorState();
    
    const short VISIBLE_TO_NONE = 0;
    const short VISIBLE_TO_FRIENDS = 1;
    const short VISIBLE_TO_ALL = 2;
    attribute short visibilityState;

    void credentialsSetExplicitly();

    void addSensorListener( in IMediumSensorListener listener);
    void removeSensorListener( in IMediumSensorListener listener);

    void onFocus( in AUTF8String url);
    void onFocused();

    void activate();
    void deactivate();

    void close();
};

[
    scriptable,
    uuid(35fd41ba-510b-4780-a545-b8d4c6bb7205)
]
interface IMediumSensorListener :
    nsISupports
{
    void onSensorStateChange();
    void onVisibilityStateChange();
};
