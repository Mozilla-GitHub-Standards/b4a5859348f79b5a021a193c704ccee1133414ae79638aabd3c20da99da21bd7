/* Copyright (C) 2007-2011 eBay Inc. All Rights Reserved. */const EXPORTED_SYMBOLS=["ItemList"];const Cc=Components.classes;const Ci=Components.interfaces;const Ce=Components.Exception;const Cr=Components.results;const Cu=Components.utils;Cu.import("resource://ebaycompanion/helpers/logger.js");Cu.import("resource://ebaycompanion/helpers/observers.js");Cu.import("resource://ebaycompanion/objects/item.js");Cu.import("resource://ebaycompanion/datasource.js");function ItemList(listName){this._listName=listName;this._filteredItems=[];this.reset(true);this._observers=new Observers;let(that=this){this._observers.add(function(subject,topic,data){if(that._listName&&that._listName.indexOf(data)!=-1){that.reset();}},"ebay-sidebar-list-reset");this._observers.add(function(subject,topic,data){that._addItem(subject.object);that._addItem(subject.object,true);},"ebay-item-new");this._observers.add(function(subject,topic,data){that._removeItem(subject.object,true);that._removeItem(subject.object,true,true);},"ebay-item-removed");this._observers.add(function(subject,topic,data){that._refilterItem(subject.object);},"ebay-item-changed");this._observers.add(function(subject,topic,data){that._addTransactionItem(subject.object);that._addTransactionItem(subject.object,true);},"ebay-transaction-new");this._observers.add(function(subject,topic,data){that._removeTransactionItem(subject.object);that._removeTransactionItem(subject.object,true,true);},"ebay-transaction-item-removed");}
this._listeners=[];}
ItemList.prototype={get listName(){return this._listName;},get items(){return this._itemArray;},get filteredItems(){return this._filteredItems;},reset:function(aStartupReset){this._itemArray=[];let hashList=Datasource.items();if(hashList){for(let[itemId,item]in Iterator(hashList)){let itemTransactions=Datasource.transactions(item.get("itemId"));if(itemTransactions){let userId=Datasource.activeAccount().get("userId");for(let[transactionId,transaction]in Iterator(itemTransactions)){let copy=item.copy();copy.set("isEnded",true);let highBidder=copy.get("highBidderId");if(highBidder==null||highBidder.length==0){copy.set("highBidderId",transaction.get("buyerUserId"));}
if(copy.get("sellerUserId").toLowerCase()==userId.toLowerCase()){copy.set("quantitySold",transaction.get("quantityPurchased"));copy.set("userQuantityWinning",0);copy.type=Item.ITEM_TYPE_SOLD;}else{copy.set("userQuantityWinning",transaction.get("quantityPurchased"));copy.set("quantitySold",0);copy.type=Item.ITEM_TYPE_WON;}
copy.transaction=transaction;this._itemArray.push(copy);}
if(!item.get("isEnded")){let endTime=item.get("endTime");let ebayTime=Datasource.getEbayTime().getTime();let timeLeft=Math.max(0,endTime-ebayTime);if(item.get("sellerUserId").toLowerCase()==userId.toLowerCase()&&timeLeft>0){this._itemArray.push(item);}}}else{this._itemArray.push(item);}}}
if(aStartupReset){this._filter=function(item){return true;};this._lessThan=function(a,b){return a.get("itemId")<b.get("itemId");};}},filter:function(filter){if(filter){this._filter=filter;}
let filteredArray=[];let item;for(let i=0;i<this._itemArray.length;i++){item=this._itemArray[i];if(this._filter(item)){filteredArray.push(item);}}
this._filteredItems.splice(0,this._filteredItems.length);this._filteredItems=null;this._filteredItems=filteredArray;},sort:function(lessThan){if(lessThan){this._lessThan=lessThan;}
this._filteredItems=quicksort(this._filteredItems,this._lessThan);},addListener:function(listener){this._listeners.push(listener);},removeListener:function(aListener){for(let i=0;i<this._listeners.length;i++){let listener=this._listeners[i];try{if(aListener==listener){this._listeners.splice(i,1);}}
catch(e){}}},_notifyListeners:function(eventName,params){try{let methodName=eventName+"Event";for(let i=0;i<this._listeners.length;i++){let listener=this._listeners[i];try{listener[methodName].apply(listener,params);}
catch(e){}}}
catch(e){Logger.exception(e);}},_addItem:function(item,toFilteredList){try{if(toFilteredList&&!this._filter(item)){return;}
let itemList=this._itemArray;if(toFilteredList){itemList=this._filteredItems;}
let newIndex=binarySearch(item,itemList,this._lessThan);let existingItem=itemList[newIndex];let sameItem=(existingItem&&existingItem.get("itemId")==item.get("itemId"));if(!sameItem){let exhaustiveIndex=exhaustiveSearch(item,itemList);if(null!=exhaustiveIndex){existingItem=itemList[exhaustiveIndex];sameItem=(existingItem.get("itemId")==item.get("itemId"));newIndex=exhaustiveIndex;}}
if(existingItem){if(sameItem){if(existingItem.transaction!=null&&item.transaction!=null&&existingItem.transaction.get("transactionId")!=item.transaction.get("transactionId")){sameItem=false;}
let userId=Datasource.activeAccount().get("userId");let itemTransactions=Datasource.transactions(item.get("itemId"));if(!existingItem.get("isEnded")&&existingItem.get("sellerUserId").toLowerCase()!=userId.toLowerCase()&&existingItem.transaction==null&&itemTransactions){this._removeItem(item,true,toFilteredList);}}}
if(!existingItem||!sameItem){itemList.splice(newIndex,0,item);if(toFilteredList){this._notifyListeners("itemAdded",[newIndex,item]);}}}
catch(e){Logger.exception(e);}},_removeItem:function(item,force,toFilteredList){try{let itemList=this._itemArray;if(toFilteredList){itemList=this._filteredItems;}
let itemIndex=binarySearch(item,itemList,this._lessThan);let existingItem=itemList[itemIndex];if(!existingItem){return;}
let sameItem=(existingItem.get("itemId")==item.get("itemId"));if(!sameItem){let exhaustiveIndex=exhaustiveSearch(item,itemList);if(null!=exhaustiveIndex){existingItem=itemList[exhaustiveIndex];sameItem=(existingItem.get("itemId")==item.get("itemId"));itemIndex=exhaustiveIndex;}}
if(sameItem){if(existingItem.transaction!=null){sameItem=false;}}
if(sameItem){itemList.splice(itemIndex,1);if(toFilteredList){this._notifyListeners("itemRemoved",[itemIndex,force,item]);}}}
catch(e){Logger.exception(e);}},_refilterItem:function(item){if(this._filter(item)){this._addItem(item);this._addItem(item,true);}else{this._removeItem(item,false,true);}},_addTransactionItem:function(transaction,toFilteredList){try{let item=Datasource.items()[transaction.get("itemId")];let userId=Datasource.activeAccount().get("userId");if(item){let itemCopy=item.copy();itemCopy.set("isEnded",true);itemCopy.transaction=transaction;let highBidder=itemCopy.get("highBidderId");if(highBidder==null||highBidder.length==0){itemCopy.set("highBidderId",transaction.get("buyerUserId"));}
if(itemCopy.get("sellerUserId").toLowerCase()==userId.toLowerCase()){itemCopy.set("quantitySold",transaction.get("quantityPurchased"));itemCopy.set("userQuantityWinning",0);itemCopy.type=Item.ITEM_TYPE_SOLD;}else{itemCopy.set("userQuantityWinning",transaction.get("quantityPurchased"));itemCopy.set("quantitySold",0);itemCopy.type=Item.ITEM_TYPE_WON;}
if(toFilteredList&&!this._filter(itemCopy)){return;}
let itemList=this._itemArray;if(toFilteredList){itemList=this._filteredItems;}
let newIndex=binarySearch(itemCopy,itemList,this._lessThan);let existingItem=itemList[newIndex];let sameItem=false;let replaceExisting=0;if(existingItem){sameItem=(existingItem.get("itemId")==itemCopy.get("itemId"));if(!sameItem){let exhaustiveIndex=exhaustiveSearch(itemCopy,itemList);if(null!=exhaustiveIndex){existingItem=itemList[exhaustiveIndex];sameItem=(existingItem.get("itemId")==itemCopy.get("itemId"));newIndex=exhaustiveIndex;}}
if(sameItem){let EC_LISTING_TYPE_CHINESE="Chinese";let EC_LISTING_TYPE_DUTCH="Dutch";let EC_LISTING_TYPE_LIVE="Live";let listingFormat=existingItem.get("listingFormat");if((EC_LISTING_TYPE_CHINESE==listingFormat||EC_LISTING_TYPE_DUTCH==listingFormat||EC_LISTING_TYPE_LIVE==listingFormat)&&(existingItem.transaction==null&&itemCopy.transaction!=null)){sameItem=false;replaceExisting=1;}else if((existingItem.transaction==null&&itemCopy.transaction!=null)){sameItem=false;replaceExisting=1;}else if(existingItem.transaction!=null&&itemCopy.transaction!=null&&existingItem.transaction.get("transactionId")!=itemCopy.transaction.get("transactionId")){sameItem=false;}}}
if(!existingItem||!sameItem){itemList.splice(newIndex,replaceExisting,itemCopy);if(toFilteredList&&replaceExisting==0){newIndex=0;this._notifyListeners("itemAdded",[newIndex,itemCopy]);}}}}catch(e){Logger.exception(e);}},_removeTransactionItem:function(transactionItem,force,toFilteredList){let itemList=this._itemArray;if(toFilteredList){itemList=this._filteredItems;}
for(var i=0;i<itemList.length;i++){let listItem=itemList[i];if(listItem.transaction!=null&&listItem.get("itemId")==transactionItem.get("itemId")&&listItem.get("transactionId")==transactionItem.get("transactionId")){itemList.splice(i,1);if(toFilteredList){this._notifyListeners("itemRemoved",[i,force,transactionItem]);}
break;}}
let dsItem=Datasource.items()[transactionItem.get("itemId")];let itemTransactions=Datasource.transactions(dsItem.get("itemId"));let userId=Datasource.activeAccount().get("userId");if(!itemTransactions&&dsItem.get("sellerUserId").toLowerCase()!=userId.toLowerCase()){let itemCopy=dsItem.copy();itemCopy.type=Item.ITEM_TYPE_WATCHING;itemCopy.transaction=null;Datasource.addOrUpdateItem(itemCopy);this._addItem(itemCopy);this._addItem(itemCopy,true);}}}
function quicksort(array,lessThan){if(array.length<=1){return array;}
let less=[];let greater=[];let pivot=array.shift();for(let i=0;i<array.length;i++){if(lessThan(array[i],pivot)){less.push(array[i]);}else{greater.push(array[i]);}}
let left=quicksort(less,lessThan);let right=quicksort(greater,lessThan);return left.concat(pivot).concat(right);}
function binarySearch(item,array,lessThan){let low=0;let high=array.length;while(low<high){let mid=Math.floor((low+high)/2);if(lessThan(array[mid],item)){low=mid+1;}else{high=mid;}}
while(array[high+1]&&!lessThan(array[high],array[high+1])&&array[high].get("itemId")!=item.get("itemId")){high++;}
return high;}
function exhaustiveSearch(aItem,aArray){let item;let index=null;for(var i=0;i<aArray.length;i++){if(aArray[i].get("itemId")==aItem.get("itemId")){index=i;break;}}
return index;}