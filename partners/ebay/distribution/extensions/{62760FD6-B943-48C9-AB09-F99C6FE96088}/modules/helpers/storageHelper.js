/* Copyright (C) 2007-2011 eBay Inc. All Rights Reserved. */const EXPORTED_SYMBOLS=["StorageHelper"];const Cc=Components.classes;const Ci=Components.interfaces;const Ce=Components.Exception;const Cr=Components.results;const Cu=Components.utils;const DB_FILE_NAME="ebay-companion.sqlite";const DB_TEMPLATE_FILE_NAME="ebay-companion.template.sqlite";var StorageHelper={_init:function(){try{Cu.import("resource://ebaycompanion/helpers/logger.js");Cu.import("resource://ebaycompanion/helpers/observers.js");Cu.import("resource://ebaycompanion/constants.js");this._observers=new Observers;let(that=this){this._observers.add(function()that._uninit(),"quit-application-granted");}
let databaseFile=Cc["@mozilla.org/file/directory_service;1"].getService(Ci.nsIProperties).get("ProfD",Ci.nsIFile);databaseFile.append("eBay Inc");databaseFile.append(DB_FILE_NAME);let databasePreexisted=databaseFile.exists();if(databasePreexisted&&Constants.prefBranch.get("firstRun")){databaseFile.remove(true);this._copyTemplate(databaseFile);}else if(!databasePreexisted){this._copyTemplate(databaseFile);}
this._databaseFile=databaseFile.clone();this._storageService=Cc["@mozilla.org/storage/service;1"].getService(Ci.mozIStorageService);this._databaseConnection=this._storageService.openDatabase(this._databaseFile);if(typeof(Timer)=="undefined"){Cu.import("resource://ebaycompanion/helpers/timer.js");}
new Timer(function(){Cu.import("resource://ebaycompanion/storage/migrations.js");Migrations.performMigrations();},500,Timer.TYPE_ONE_SHOT);}
catch(e){Logger.exception(e);}},_uninit:function(){try{this._observers.removeAll();}
catch(e){Logger.exception(e);}},get connection(){return this._databaseConnection;},_copyTemplate:function(aDBFile){let rootDatabaseFile=Cc["@mozilla.org/file/directory_service;1"].getService(Ci.nsIProperties).get("ProfD",Ci.nsIFile);rootDatabaseFile.append(DB_FILE_NAME);if(rootDatabaseFile.exists()){rootDatabaseFile.moveTo(aDBFile.parent,aDBFile.leafName);}else{let copied=false;if(Constants.isFirefox4){copied=Constants.extractFileFromZip(DB_TEMPLATE_FILE_NAME,DB_FILE_NAME);}
if(!copied){let defaultFile=Constants.getDefaultsFolder(Constants.extensionId);defaultFile.append(DB_TEMPLATE_FILE_NAME);defaultFile.copyTo(aDBFile.parent,aDBFile.leafName);}}},doStatement:function(statementText,parameters,async){let rows=[];let statement=null;let asyncSupported=false;if(typeof(async)=="undefined"){async=false;}
let executedSync=true;try{statement=this.connection.createStatement(statementText);if(parameters){for(let i=0;i<parameters.length;i++){statement.bindUTF8StringParameter(i,parameters[i]);}}
let appInfo=Cc["@mozilla.org/xre/app-info;1"].getService(Ci.nsIXULAppInfo);let versionChecker=Cc["@mozilla.org/xpcom/version-comparator;1"]
.getService(Ci.nsIVersionComparator);asyncSupported=versionChecker.compare(appInfo.platformVersion,"1.9.1")>=0;if(async&&asyncSupported){executedSync=false;statement.executeAsync({handleResult:function(aResultSet){},handleError:function(aError){Logger.exception(aError.message);},handleCompletion:function(aReason){if(aReason!=Ci.mozIStorageStatementCallback.REASON_FINISHED){Logger.exception("Database query canceled or aborted!");}else{Logger.log("Async database operation successful");}}});}else{while(statement.executeStep()){let row={};for(let i=0;i<statement.numEntries;i++){let key=statement.getColumnName(i);let value=statement.getUTF8String(i);row[key]=value;}
rows.push(row);}}}
catch(e){Logger.exception(e);}
finally{if(statement!=null&&executedSync){statement.reset();statement.finalize();}}
return rows;},removeDatabase:function(){this._databaseFile.remove(true);},closeConnection:function(){try{this._databaseConnection.close();delete this._databaseConnection;this._databaseConnection=null;}catch(e){this._databaseConnection=null;Logger.error("_closeDBConnection: "+e);}}};StorageHelper._init();